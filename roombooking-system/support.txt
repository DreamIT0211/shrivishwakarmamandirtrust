USE roombooking;

DROP TABLE IF EXISTS roombooking;
DROP TABLE IF EXISTS rooms;
DROP TABLE IF EXISTS users;

CREATE TABLE rooms (
    RoomID INT IDENTITY(1,1) PRIMARY KEY,
    RoomNumber NVARCHAR(50) NOT NULL,
    Capacity INT NOT NULL,
    Location NVARCHAR(100) NOT NULL,
    Price decimal(10, 2) NOT NULL DEFAULT 0.00,
);


CREATE TABLE users (
    UserID INT IDENTITY(1,1) PRIMARY KEY,
    Username NVARCHAR(50) NOT NULL,
    Password NVARCHAR(255) NOT NULL,
    Email NVARCHAR(100) NOT NULL,
    FullName NVARCHAR(100) NOT NULL
);

ALTER TABLE users
ADD Role VARCHAR(50) DEFAULT 'user' NOT NULL;

ALTER TABLE users
DROP COLUMN Role;

update users set Role = 'admin' where UserID = 1


CREATE TABLE roombooking (
    BookingID INT IDENTITY(1,1) PRIMARY KEY,
    RoomID INT NOT NULL,
    UserID INT NOT NULL,
    StartDate DATETIME NOT NULL,
    EndDate DATETIME NOT NULL,
    BookingStatus NVARCHAR(50) NOT NULL,
    CONSTRAINT CHK_Date CHECK (StartDate < EndDate),
    CONSTRAINT FK_Room FOREIGN KEY (RoomID) REFERENCES rooms(RoomID),
    CONSTRAINT FK_User FOREIGN KEY (UserID) REFERENCES users(UserID)
);


CREATE INDEX IDX_RoomBooking_RoomID ON roombooking (RoomID);
CREATE INDEX IDX_RoomBooking_UserID ON roombooking (UserID);


CREATE TABLE events (
    event_id INT PRIMARY KEY IDENTITY,
    event_image VARCHAR(MAX),
    event_title VARCHAR(255),
    event_description TEXT
);


CREATE TABLE YouTubeVideos (
    video_id INT PRIMARY KEY IDENTITY(1,1),
    video_link NVARCHAR(255) NOT NULL,
    video_title NVARCHAR(255) NOT NULL,
    video_description NVARCHAR(MAX) NOT NULL
);

CREATE TABLE live_darshan (
    id INT PRIMARY KEY IDENTITY(1,1),
    video_link NVARCHAR(MAX),
    created_at DATETIME DEFAULT GETDATE()
);

CREATE TABLE HeroImages (
    image_id INT PRIMARY KEY IDENTITY(1,1),
    image_link NVARCHAR(MAX) NOT NULL
);

CREATE TABLE Headline (
    NewsLineID INT PRIMARY KEY IDENTITY(1,1),
    Line NVARCHAR(MAX)
);

CREATE TABLE trustee (
    trustee_id INT PRIMARY KEY IDENTITY,
    trustee_image VARCHAR(MAX),
    trustee_name NVARCHAR(255),  -- Changed to NVARCHAR to support Unicode characters
    trustee_mobileNo NVARCHAR(50),  -- Changed to NVARCHAR to support Unicode characters
    trustee_description NTEXT,  -- Changed to NTEXT to support Unicode characters
    trustee_title NVARCHAR(50) NULL  -- Already using NVARCHAR, so no change needed
);

CREATE TRIGGER trg_LimitToOneRow
ON Headline
AFTER INSERT
AS
BEGIN
    IF (SELECT COUNT(*) FROM Headline) > 1
    BEGIN
        ROLLBACK TRANSACTION;
        RAISERROR ('Only one row is allowed in the Headline table.', 16, 1);
    END
END;

CREATE PROCEDURE UpdateHeadline
    @NewsLineID INT,
    @Line NVARCHAR(MAX)
AS
BEGIN
    UPDATE Headline
    SET Line = @Line
    WHERE NewsLineID = @NewsLineID;
END;

CREATE PROCEDURE DeleteHeadline
    @NewsLineID INT
AS
BEGIN
    DELETE FROM Headline
    WHERE NewsLineID = @NewsLineID;
END;

ALTER TABLE Headline
ADD created_at DATETIME DEFAULT GETDATE();


CREATE TABLE gallery (
    id INT PRIMARY KEY IDENTITY,
    image_url VARCHAR(MAX)
);

SELECT * FROM roombooking;
SELECT * FROM rooms;
SELECT * FROM users;
SELECT * FROM events;
SELECT * FROM YouTubeVideos;
SELECT * FROM HeroImages;
SELECT * FROM live_darshan;
SELECT * FROM Headline;
SELECT * FROM trustee;
SELECT * FROM gallery;
